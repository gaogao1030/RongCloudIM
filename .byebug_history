continue
user.errors.full_messages
user.errors.messages
user.errors
user
user.messages
user.error
user.messages
user.errors
continue
next
params
continue
p.param
p.methods
p
continue
"#{p.param}:#{p.message}"
p "#{p.param}:#{p.message}"
p "#{p.name}:#{p.message}"
p
p "#{p.name}:#{p.message}
"#{p.name}:#{p.message}
p.message
p.options
p.message
p.exception
p
o p.message
p.param+":" + p.message
p.param + p.message
p.message
p.methods
p
o
continue
s
continueerror
continue
p
o.error
p.param
p.methods
p
continue
parameters
parameters.permit()
parameters.permit
parameters.permit(:email,:password,:name)
parameters.permit(:email,:password)
parameters.permit(:email)
params
paramsparameters.permit(:email)
parameters.permit(:email)
parameters.permit("email")
parameters
paramterrs
params
continue
user
continue
user
continue
user
continue
result["token"]
result
continue
session
cookies
continue
cookies
session
cookie
exit
cookies
cookie
continue
response.set_cookie session
response
response.set_session
current_user
session
continue
session
continue
session
session.devise
session
continue
response.set_cookie "bane","nic"
response.set_cookie
response
exit
current_user
exit
request.session
request
current_user
continue
next
exit
result.parsed_response
reload!
reload
result.parsed_response
result.response
result
 result = HTTParty.post(post_url,body:opt,headers: header_signature)
result
 result = HTTParty.post(post_url,body:opt,headers: header_signature)
exit
header_signature
result = HTTParty.post(post_url,body:opt,headers: header_signature)
exit
{"a"=>"s"}
{"a"=>aa}
result = HTTParty.post(post_url,body:opt,headers: header_signature)
header_signature
exit
result = HTTParty.post(post_url,body:opt,headers: {"App-key"=>@app_key})
result = HTTParty.post(post_url,body:opt,headers: {"App-key": @app_key})
result = HTTParty.post(post_url,body:opt,headers:{App-key: @app_key})
result = HTTParty.post(post_url,body:opt,heades:{App-key: "a"})
result = HTTParty.post(post_url,body:opt,heades:{App-key: @app_key})
result = HTTParty.post(post_url,body:opt,heades:{App-key:@app_key})
@app_key
result = HTTParty.post(post_url,body:opt,heades:{App-key:@app_key})
result = HTTParty.post(post_url,body:opt,heades:{App-key: @app_key})
result = HTTParty.post(post_url,body:opt,heades:{App-key:@app_key})
@app_key
opt
result = HTTParty.post(post_url,body:opt)
exit
result = HTTParty.post(post_url,body:{userId:1})
result = HTTParty.post(post_url,userId:1)
result = HTTParty.post(post_url+"?userId=1")
result = HTTParty.post(post_url+"?userId=1",)
result = HTTParty.post(post_url?userId=1,)
result = HTTParty.post(post_url,{userId:'1'})
result = HTTParty.post(post_url,{userId:1})
opt
result.response
result
result = HTTParty.post(post_url,opt)
opt
post_url
result
result = HTTParty.post(post_url,opt.to_json)
result
exit
result = RestClient.post("https://api.cn.ronghub.com/user/getToken.json",{})
result
result = RestClient.post("https://api.cn.ronghub.com/user/getToken",{})
result = RestClient.post("https://api.cn.ronghub.com/user/getToken.json",{})
result = RestClient.post("https://api.cn.ronghub.com/user/getToken.json","")
result = RestClient.post("https://api.cn.ronghub.com/user/getToken.json",)
result = RestClient.post("https://api.cn.ronghub.com/user/getToken.json",{})
result = RestClient.post(https://api.cn.ronghub.com/user/getToken.json,{})
result = RestClient.post(post_url,{})
post_url
result
result = RestClient.post(post_url,opt.to_json)
result
result = RestClient.post(post_url,opt.to_json)
result
result = RestClient.post(post_url,opt.to_json)
post_url
result
result = RestClient.post(post_url,opt.to_json)
opt.to_json
opt
continue
next
post_url
result
exit
@api_host
post_url
